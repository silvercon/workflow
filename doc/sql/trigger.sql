-- SHOW TRIGGERS;
-- DROP TRIGGER USER_UPDATE_TRI;

-- 用户CURD触发器
DELIMITER $
CREATE TRIGGER USER_INSERT_TRI AFTER INSERT ON sys_user
FOR EACH ROW
BEGIN
	INSERT INTO ACT_ID_USER(ID_, LAST_, EMAIL_) VALUES(NEW.ID, NEW.USER_NAME, NEW.USER_EMAIL);
END$;
DELIMITER ;

DELIMITER $
CREATE TRIGGER USER_UPDATE_TRI AFTER UPDATE ON sys_user
FOR EACH ROW
BEGIN
	SET SQL_SAFE_UPDATES = 0;
	UPDATE ACT_ID_USER SET LAST_ = NEW.USER_NAME, EMAIL_ = NEW.USER_EMAIL WHERE ACT_ID_USER.ID_ = NEW.ID;
    SET SQL_SAFE_UPDATES = 1;
END$;
DELIMITER ;

DELIMITER $
CREATE TRIGGER USER_DELETE_TRI AFTER DELETE ON sys_user
FOR EACH ROW
BEGIN
	SET SQL_SAFE_UPDATES = 0;
    DELETE FROM ACT_ID_USER WHERE ACT_ID_USER.ID_ = OLD.ID;
    SET SQL_SAFE_UPDATES = 1;
END$;
DELIMITER ;

-- 角色/用户组CURD触发器
DELIMITER $
CREATE TRIGGER GROUP_INSERT_TRI AFTER INSERT ON sys_role
FOR EACH ROW
BEGIN
	INSERT INTO ACT_ID_GROUP(ID_, NAME_) VALUES(NEW.ID, NEW.ROLE_NAME);
END$;
DELIMITER ;

DELIMITER $
CREATE TRIGGER GROUP_UPDATE_TRI AFTER UPDATE ON sys_role
FOR EACH ROW
BEGIN
	SET SQL_SAFE_UPDATES = 0;
	UPDATE ACT_ID_GROUP SET NAME_ = NEW.ROLE_NAME WHERE ACT_ID_GROUP.ID_ = NEW.ID;
    SET SQL_SAFE_UPDATES = 1;
END$;
DELIMITER ;

DELIMITER $
CREATE TRIGGER GROUP_DELETE_TRI AFTER DELETE ON sys_role
FOR EACH ROW
BEGIN
	SET SQL_SAFE_UPDATES = 0;
    DELETE FROM ACT_ID_GROUP WHERE ACT_ID_GROUP.ID_ = OLD.ID;
    SET SQL_SAFE_UPDATES = 1;
END$;
DELIMITER ;

-- 用户角色/用户组用户CURD触发器
DELIMITER $
CREATE TRIGGER MEMBERSHIP_INSERT_TRI AFTER INSERT ON sys_role_user
FOR EACH ROW
BEGIN
	INSERT INTO ACT_ID_MEMBERSHIP(USER_ID_, GROUP_ID_) VALUES(NEW.USER_ID, NEW.ROLE_ID);
END$;
DELIMITER ;

DELIMITER $
CREATE TRIGGER MEMBERSHIP_DELETE_TRI AFTER DELETE ON sys_role_user
FOR EACH ROW
BEGIN
	SET SQL_SAFE_UPDATES = 0;
    DELETE FROM ACT_ID_MEMBERSHIP WHERE ACT_ID_MEMBERSHIP.USER_ID_ = OLD.USER_ID AND ACT_ID_MEMBERSHIP.GROUP_ID_ = OLD.ROLE_ID;
    SET SQL_SAFE_UPDATES = 1;
END$;
DELIMITER ;

